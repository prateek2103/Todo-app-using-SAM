AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: todo-app

Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Runtime: python3.9
    Handler: app.lambda_handler

Resources:
  ArchiveBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "todo-list-archive-bucket"

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: TodoListApi
      Description: API Gateway for the Todo List Application
      StageName: Prod
      TracingEnabled: true
      MethodSettings:
        - DataTraceEnabled: true
          MetricsEnabled: true
          # LoggingLevel: "INFO"
          HttpMethod: "*"
          ResourcePath: "/*"

  DynamoDBDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "item_id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "item_id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: Todos

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/create_todo/
      Policies:
        - Statement:
            - Sid: CreatePolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Todos
      Events:
        CreateTodo:
          Type: Api
          Properties:
            Path: /todo-list/create
            Method: post
            RestApiId: !Ref ApiGateway

  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/update_todo/
      Policies:
        - Statement:
            - Sid: UpdatePolicy
              Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Todos
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /todo-list/update
            Method: post
            RestApiId: !Ref ApiGateway

  ListTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_todos/
      Policies:
        - Statement:
            - Sid: ListPolicy
              Effect: Allow
              Action:
                - dynamodb:Scan
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Todos
      Events:
        GetTodos:
          Type: Api
          Properties:
            Path: /todo-list/list-todos
            Method: get
            RestApiId: !Ref ApiGateway

  GetTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_todo/
      Policies:
        - Statement:
            - Sid: GetPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Todos
      Events:
        GetTodos:
          Type: Api
          Properties:
            Path: /todo-list/{item_id}
            Method: get
            RestApiId: !Ref ApiGateway

  ArchiveTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/archive_todo/
      Policies:
        - Statement:
            - Sid: GetAndUpdateDbPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Todos

            - Sid: ArchivePolicy
              Effect: Allow
              Action:
                - s3:PutObject
              Resource: arn:aws:s3:::todo-list-archive-bucket/*

      Events:
        GetTodos:
          Type: Api
          Properties:
            Path: /todo-list/archive/{item_id}
            Method: get
            RestApiId: !Ref ApiGateway

  ListArchiveTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_archive/
      Policies:
        - Statement:
            - Sid: GetPolicy
              Effect: Allow
              Action:
                - s3:ListBucket
              Resource: arn:aws:s3:::todo-list-archive-bucket/*
      Events:
        GetTodos:
          Type: Api
          Properties:
            Path: /todo-list/list-archives
            Method: get
            RestApiId: !Ref ApiGateway

Outputs:
  createTodoApi:
    Description: "API Gateway endpoint URL for Prod stage for Create Todo function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo-list/create"
